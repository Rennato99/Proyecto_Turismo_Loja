/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BL.BLCategory;
import BL.BLClient;
import BL.BLEvent;
import BL.BLNeighborhood;
import BL.BLParish;
import CLASES.Category;
import CLASES.Client;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import CLASES.Events;
import CLASES.Neighborhood;
import CLASES.Parish;
import DATA.GlobalVariables;
import java.sql.Date;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author carlo
 */
public final class CreateEvent extends javax.swing.JFrame {

    //ArrayList<Events> arrayEvents = new ArrayList<Events>();
//    Login_V3 objLogin_V3 = new Login_V3();
    Client objClient = new Client();

    BLClient objBLClient = new BLClient();
    BLEvent objBLEvents = new BLEvent();
    BLNeighborhood objBLNeighborhood = new BLNeighborhood();
    int rowSel = -1;

    public CreateEvent() {
        initComponents();
        this.setLocationRelativeTo(null);
        objClient = GlobalVariables.loggedClient;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEvents = new javax.swing.JTable();
        txtNameEvent = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        SpnCosto = new javax.swing.JSpinner();
        cbmCategory = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtDescription = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtPrinStr = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtSecStr = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtReferency = new javax.swing.JTextField();
        jDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        txtnNeighborhod = new javax.swing.JTextField();
        jComboBoxHour = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jComboBoxMinute = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jComboBoxParroquia = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jComboBoxBarrio = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButtonMod = new javax.swing.JButton();
        jButtonNue = new javax.swing.JButton();
        jButtonLis = new javax.swing.JButton();
        jButtonSal = new javax.swing.JButton();
        jButtonCan = new javax.swing.JButton();
        jButtonEli = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 0));
        jLabel1.setText("Nombre del evento:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        tableEvents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableEvents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableEventsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableEvents);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, 670, 130));

        txtNameEvent.setEnabled(false);
        jPanel2.add(txtNameEvent, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, 270, -1));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        jLabel4.setText("Administraci√≥n de Eventos");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 102, 0));
        jLabel2.setText("Categoria");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 102, 0));
        jLabel5.setText("Hora de inicio");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        SpnCosto.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 1.0d));
        SpnCosto.setEnabled(false);
        jPanel2.add(SpnCosto, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 60, -1));

        cbmCategory.setEnabled(false);
        jPanel2.add(cbmCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, 160, -1));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 102, 0));
        jLabel6.setText("Fecha");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 90, -1, -1));

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 102, 0));
        jLabel7.setText("Descripcion");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        txtDescription.setEnabled(false);
        jPanel2.add(txtDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 320, -1));

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 102, 0));
        jLabel8.setText("Calle Principal");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, -1));

        txtPrinStr.setEnabled(false);
        jPanel2.add(txtPrinStr, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 290, 320, -1));

        jLabel9.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 102, 0));
        jLabel9.setText("Calle Secundaria");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, -1, -1));

        txtSecStr.setEnabled(false);
        jPanel2.add(txtSecStr, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 330, 320, -1));

        jLabel10.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 102, 0));
        jLabel10.setText("Referencia");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        txtReferency.setEnabled(false);
        jPanel2.add(txtReferency, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 370, 320, -1));

        jDateChooser.setEnabled(false);
        jPanel2.add(jDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(519, 90, 150, -1));

        jLabel11.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 102, 0));
        jLabel11.setText("Barrio");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 450, -1, -1));

        txtnNeighborhod.setEnabled(false);
        jPanel2.add(txtnNeighborhod, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 410, 320, -1));

        jComboBoxHour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        jComboBoxHour.setEnabled(false);
        jPanel2.add(jComboBoxHour, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, 70, -1));

        jLabel12.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 102, 0));
        jLabel12.setText("Costo de entrada");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        jLabel3.setText("Hora");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 40, -1));

        jLabel13.setText("Minutos");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 130, 60, -1));

        jComboBoxMinute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        jComboBoxMinute.setEnabled(false);
        jPanel2.add(jComboBoxMinute, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 150, 70, -1));

        jLabel14.setText(":");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, 10, -1));

        jComboBoxParroquia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxParroquiaActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBoxParroquia, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 450, 180, -1));

        jLabel15.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 102, 0));
        jLabel15.setText("Barrio");
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));

        jPanel2.add(jComboBoxBarrio, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 450, 200, -1));

        jLabel16.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 102, 0));
        jLabel16.setText("Parroquia");
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 13, 725, 630));

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonMod.setText("Modificar");
        jButtonMod.setEnabled(false);
        jButtonMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 100, -1));

        jButtonNue.setText("Nuevo");
        jButtonNue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNueActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonNue, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 100, -1));

        jButtonLis.setText("Listar");
        jButtonLis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLisActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonLis, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 100, -1));

        jButtonSal.setText("Regresar");
        jButtonSal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 100, -1));

        jButtonCan.setText("Cancelar");
        jButtonCan.setEnabled(false);
        jButtonCan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCanActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonCan, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 100, -1));

        jButtonEli.setText("Eliminar");
        jButtonEli.setEnabled(false);
        jButtonEli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonEli, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 100, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(773, 22, 128, 290));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableEventsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEventsMouseClicked
        // TODO add your handling code here:
        this.jButtonEli.setEnabled(true);
        this.jButtonMod.setEnabled(true);
        this.cbmCategory.removeAllItems();
        rowSel = tableEvents.getSelectedRow();
        this.txtNameEvent.setText(tableEvents.getValueAt(rowSel, 0).toString());
        this.SpnCosto.setValue(Double.parseDouble(tableEvents.getValueAt(rowSel, 1).toString()));
        this.jDateChooser.setDate(Date.valueOf(tableEvents.getValueAt(rowSel, 2).toString()));
        this.jComboBoxHour.setSelectedItem(objClient.getArrayEvents().get(rowSel).getHour());
        this.jComboBoxMinute.setSelectedItem(objClient.getArrayEvents().get(rowSel).getMinutes());
        this.cbmCategory.addItem(tableEvents.getValueAt(rowSel, 4).toString());
        this.txtDescription.setText(tableEvents.getValueAt(rowSel, 5).toString());
        this.txtPrinStr.setText(tableEvents.getValueAt(rowSel, 6).toString());
        this.txtSecStr.setText(tableEvents.getValueAt(rowSel, 7).toString());
        this.txtReferency.setText(tableEvents.getValueAt(rowSel, 8).toString());
        this.txtnNeighborhod.setText(tableEvents.getValueAt(rowSel, 9).toString());
    }//GEN-LAST:event_tableEventsMouseClicked

    private void jButtonModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModActionPerformed
        // TODO add your handling code here:

        this.jButtonEli.setEnabled(false);
        if ((rowSel == -1) && this.jButtonMod.getText().equals("Modificar")) {
            this.jButtonMod.setEnabled(false);
            JOptionPane.showMessageDialog(null, "No ha seleccionado");
        } else {
            if (this.jButtonMod.getText().equals("Guardar")) {
                this.jButtonMod.setText("Modificar");
                this.txtNameEvent.setEnabled(false);
                this.SpnCosto.setEnabled(false);
                this.jDateChooser.setEnabled(false);
                this.txtDescription.setEnabled(false);
                this.cbmCategory.setEnabled(false);
                this.txtPrinStr.setEnabled(false);
                this.txtSecStr.setEnabled(false);
                this.txtReferency.setEnabled(false);
                this.txtnNeighborhod.setEnabled(false);
                this.jButtonNue.setEnabled(true);
                this.jButtonEli.setEnabled(false);
                this.jButtonLis.setEnabled(true);
                this.jButtonCan.setEnabled(false);
                DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                Date date = Date.valueOf(df.format(this.jDateChooser.getDate()));
                String hour = this.jComboBoxHour.getSelectedItem().toString();
                String minute = this.jComboBoxMinute.getSelectedItem().toString();

                Events objTmpEvents = objBLEvents.createEVENT(0, this.txtNameEvent.getText(), Double.parseDouble(this.SpnCosto.getValue().toString()),
                        date, hour, minute, this.txtDescription.getText(), (Category) this.cbmCategory.getSelectedItem(),
                        0, this.txtPrinStr.getText(), this.txtSecStr.getText(), this.txtReferency.getText(), this.txtnNeighborhod.getText(),
                        null);
                try {
                    objBLEvents.updateEventDB(objClient.getArrayEvents().get(rowSel), objTmpEvents);
                    //this.jButtonLisActionPerformed(evt);
                    JOptionPane.showMessageDialog(null, "Evento actualizado con exito");
                } catch (SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(CreateEvent.class.getName()).log(Level.SEVERE, null, ex);
                }
                getEvents();
            } else {
                this.jButtonMod.setText("Guardar");
                getCategories();
                this.txtNameEvent.setEnabled(true);
                this.SpnCosto.setEnabled(true);
                this.jDateChooser.setEnabled(true);
                this.jComboBoxHour.setEnabled(true);
                this.jComboBoxMinute.setEnabled(true);
                this.txtDescription.setEnabled(true);
                this.cbmCategory.setEnabled(true);
                this.txtPrinStr.setEnabled(true);
                this.txtSecStr.setEnabled(true);
                this.txtnNeighborhod.setEnabled(true);
                this.txtReferency.setEnabled(true);
                this.jButtonNue.setEnabled(false);
                this.jButtonEli.setEnabled(false);
                this.jButtonLis.setEnabled(false);
                this.jButtonCan.setEnabled(true);
            }

        }

    }//GEN-LAST:event_jButtonModActionPerformed

    private void jButtonNueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNueActionPerformed
        // TODO add your handling code here:

        if (this.jButtonNue.getText().equals("Guardar")) {

            try {
                DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                Date date = Date.valueOf(df.format(this.jDateChooser.getDate()));
                String hour = this.jComboBoxHour.getSelectedItem().toString();
                String minute = this.jComboBoxMinute.getSelectedItem().toString();

                objClient.setEvent(0, this.txtNameEvent.getText(), Double.parseDouble(this.SpnCosto.getValue().toString()),
                        date, hour, minute, this.txtDescription.getText(), (Category) this.cbmCategory.getSelectedItem(),
                        0, this.txtPrinStr.getText(), this.txtSecStr.getText(), this.txtReferency.getText(), this.txtnNeighborhod.getText(),
                        null);
                objBLEvents.insertEvent(objClient);
                JOptionPane.showMessageDialog(null, "Evento Guardado con exito");
                getEvents();
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(CreateEvent.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.jButtonNue.setText("Nuevo");
            this.txtNameEvent.setEnabled(false);
            this.SpnCosto.setEnabled(false);
            this.jDateChooser.setEnabled(false);
            this.jComboBoxHour.setEnabled(false);
            this.jComboBoxMinute.setEnabled(false);
            this.txtDescription.setEnabled(false);
            this.cbmCategory.setEnabled(false);
            this.txtPrinStr.setEnabled(false);
            this.txtSecStr.setEnabled(false);
            this.txtReferency.setEnabled(false);
            this.txtnNeighborhod.setEnabled(false);
            this.jButtonMod.setEnabled(true);
            this.jButtonCan.setEnabled(false);
            this.jButtonEli.setEnabled(true);
        } else {
            this.cbmCategory.removeAllItems();
            getCategories();
            getParishes();
            try {
                objBLNeighborhood.getAllNeihgborhoods();
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(CreateEvent.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.jButtonNue.setText("Guardar");
            this.txtNameEvent.setText("");
            this.SpnCosto.setValue(0);
            this.jDateChooser.setDate(new java.util.Date());
            this.jComboBoxHour.setSelectedIndex(0);
            this.jComboBoxMinute.setSelectedIndex(0);
            this.txtDescription.setText("");
            this.txtPrinStr.setText("");
            this.txtSecStr.setText("");
            this.txtReferency.setText("");
            this.txtnNeighborhod.setText("");
            this.txtNameEvent.setEnabled(true);
            this.SpnCosto.setEnabled(true);
            this.jDateChooser.setEnabled(true);
            this.jComboBoxHour.setEnabled(true);
            this.jComboBoxMinute.setEnabled(true);
            this.txtDescription.setEnabled(true);
            this.cbmCategory.setEnabled(true);
            this.txtPrinStr.setEnabled(true);
            this.txtSecStr.setEnabled(true);
            this.txtReferency.setEnabled(true);
            this.txtnNeighborhod.setEnabled(true);
            this.jButtonMod.setEnabled(false);
            this.jButtonCan.setEnabled(true);
            this.jButtonEli.setEnabled(false);
        }
    }//GEN-LAST:event_jButtonNueActionPerformed

    private void jButtonLisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLisActionPerformed
        getEvents();


    }//GEN-LAST:event_jButtonLisActionPerformed

    private void jButtonSalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalActionPerformed

        OptionClient objOptionClient = new OptionClient();
        objOptionClient.setVisible(true);
        this.setVisible(false);


    }//GEN-LAST:event_jButtonSalActionPerformed

    private void jButtonCanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCanActionPerformed
        // TODO add your handling code here:

        this.jButtonMod.setText("Modificar");
        this.jButtonNue.setText("Nuevo");
        this.jButtonMod.setEnabled(true);
        this.jButtonEli.setEnabled(true);
        this.jButtonNue.setEnabled(true);
        this.txtNameEvent.setEnabled(false);
        this.SpnCosto.setEnabled(false);
        this.jDateChooser.setEnabled(false);
        this.jComboBoxHour.setEnabled(false);
        this.jComboBoxMinute.setEnabled(false);
        this.txtDescription.setEnabled(false);
        this.cbmCategory.setEnabled(false);
        this.txtPrinStr.setEnabled(false);
        this.txtSecStr.setEnabled(false);
        this.txtReferency.setEnabled(false);
        this.txtnNeighborhod.setEnabled(false);
        this.jButtonCan.setEnabled(false);


    }//GEN-LAST:event_jButtonCanActionPerformed

    private void jButtonEliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliActionPerformed
        // TODO add your handling code here:
        this.jButtonMod.setEnabled(false);
        if (JOptionPane.showConfirmDialog(null, "Desea eliminar el cliente?", "Advertencia!", 1) == 0) {
            try {
                objBLEvents.deleteEventDB(objClient.getArrayEvents().get(rowSel));
                JOptionPane.showMessageDialog(null, "Evento Eliminado con exito");
                getEvents();
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(CreateEvent.class.getName()).log(Level.SEVERE, null, ex);
            }

        }else{
            this.jButtonMod.setEnabled(true);
        }
//        
    }//GEN-LAST:event_jButtonEliActionPerformed

    private void jComboBoxParroquiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxParroquiaActionPerformed
        try {
            // TODO add your handling code here:
            getNeighborhoods((Parish) this.jComboBoxParroquia.getSelectedItem());
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(CreateEvent.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jComboBoxParroquiaActionPerformed

    public void getEvents() {
        Object columnas[] = {"Nombre Evento", "Costo", "Fecha", "Hora de inicio", "Categoria", "Descripcion",
            "Calle Principal", "Calle Secundaria", "Referencia", "Barrio"};
        DefaultTableModel modelo = new DefaultTableModel(null, columnas);
        try {
            objClient = objBLClient.findEventsClient(objClient);
            //Object tlbFila [] = new Object[10];
            for (Events objEvents : objClient.getArrayEvents()) {
//                     
                String NewValor[] = {objEvents.getName(),
                    String.valueOf(objEvents.getCost()),
                    String.valueOf(objEvents.getDate()),
                    objEvents.getHour() + ":" + objEvents.getMinutes(),
                    objEvents.getCategory().getCategoryName(),
                    objEvents.getDescription(),
                    objEvents.getPlace().getPrincipalStreet(),
                    objEvents.getPlace().getSecondaryStreet(),
                    objEvents.getPlace().getReference(),
                    objEvents.getPlace().getNeighborhood(), //objEvents.getState().getDescription()
            };
                modelo.addRow(NewValor);
            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(CreateEvent.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.tableEvents.setModel(modelo);

    }

    public void getCategories() {
        BLCategory objBLCategory = new BLCategory();
        ArrayList<Category> listCategories = new ArrayList<Category>();
        try {
            objBLCategory.getCategories(listCategories);
            DefaultComboBoxModel ModCategories = new DefaultComboBoxModel();
            for (Category p : listCategories) {
                ModCategories.addElement(p);
            }
            this.cbmCategory.setModel(ModCategories);
        } catch (SQLException e) {
            System.err.println("error");
        }
    }
    
    public void getParishes() {
        BLParish objBLParish = new BLParish();
        ArrayList<Parish> listParishes = new ArrayList<Parish>();
        try {
            objBLParish.getParishes(listParishes);
            DefaultComboBoxModel modParishes = new DefaultComboBoxModel();
            for (Parish p:listParishes)
                modParishes.addElement(p);
            jComboBoxParroquia.setModel(modParishes);
            //MostrarCantones((Provincia)cmbProvincia.getSelectedItem());
        } catch (SQLException e) {
            System.err.println("error");
        }
    }
    
    public void getNeighborhoods(Parish objParishSel) throws SQLException, ClassNotFoundException {
   
        ArrayList<Neighborhood> listNeighborhoods = new ArrayList<Neighborhood>();
        listNeighborhoods = objBLNeighborhood.getNeighborhoods(objParishSel, listNeighborhoods);
        
        DefaultComboBoxModel modNeighborhoods = new DefaultComboBoxModel();
        for (Neighborhood n:listNeighborhoods)
            modNeighborhoods.addElement(n);
        jComboBoxBarrio.setModel(modNeighborhoods);
        
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateEvent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner SpnCosto;
    private javax.swing.JComboBox<String> cbmCategory;
    private javax.swing.JButton jButtonCan;
    private javax.swing.JButton jButtonEli;
    private javax.swing.JButton jButtonLis;
    private javax.swing.JButton jButtonMod;
    private javax.swing.JButton jButtonNue;
    private javax.swing.JButton jButtonSal;
    private javax.swing.JComboBox<String> jComboBoxBarrio;
    private javax.swing.JComboBox<String> jComboBoxHour;
    private javax.swing.JComboBox<String> jComboBoxMinute;
    private javax.swing.JComboBox<String> jComboBoxParroquia;
    private com.toedter.calendar.JDateChooser jDateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableEvents;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtNameEvent;
    private javax.swing.JTextField txtPrinStr;
    private javax.swing.JTextField txtReferency;
    private javax.swing.JTextField txtSecStr;
    private javax.swing.JTextField txtnNeighborhod;
    // End of variables declaration//GEN-END:variables

}
